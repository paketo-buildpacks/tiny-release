name: Publish Stack Images
on:
  push:
    branches: [ main ]
    paths: [ build-receipt , run-receipt ]
  workflow_dispatch:
    inputs:
      VERSION:
        required: false
        default: ''

jobs:
  publish-stack-images:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set Env Vars
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "VERSION=${{ github.event.inputs.VERSION }}" >> $GITHUB_ENV
        fi

    - uses: google-github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_key: ${{ secrets.GCR_PUSH_BOT_JSON_KEY }}

    - name: Configure docker gcloud auth
      run: gcloud auth configure-docker

    - name: Docker login
      run: |
        docker login -u ${{ secrets.PAKETO_BUILDPACKS_DOCKERHUB_USERNAME }} --password-stdin \
          < <(echo "${{ secrets.PAKETO_BUILDPACKS_DOCKERHUB_PASSWORD }}")

    - name: Get package diff
      id: get-package-diff
      uses: paketo-buildpacks/stacks/actions/get-package-diff@main
      with:
        ref: ${{ github.sha }}

    - name: Check for removed packages
      run: |
        removed=false
        if [[ -n "${{ steps.get-package-diff.outputs.removed-build-packages }}" ]]; then
          echo "Packages removed from build image: ${{ steps.get-package-diff.outputs.removed-build-packages }}"
          removed=true
        fi
        if [[ -n "${{ steps.get-package-diff.outputs.removed-run-packages }}" ]]; then
          echo "Packages removed from run image: ${{ steps.get-package-diff.outputs.removed-run-packages }}"
          removed=true
        fi
        if [[ "${removed}" == "true" ]]; then
          exit 1
        fi

    - name: Publish Images
      id: publish
      run: |
        version="${VERSION}"
        if [[ "${version}" == '' ]]; then
          last_version="$(curl -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/$GITHUB_REPOSITORY/tags | jq -r '.[0].name // "0.0.0"')"

          if [[ -n "${{ steps.get-package-diff.outputs.added-build-packages }}" ]] || [[ -n "${{ steps.get-package-diff.outputs.added-run-packages }}" ]]; then
            bumped_minor="$(($(echo $last_version | cut -d . -f 2) + 1))"
            version="$( echo $last_version | cut -d . -f 1)".$bumped_minor.0
          else
            bumped_patch="$(($(echo $last_version | cut -d . -f 3) + 1))"
            version="$( echo $last_version | cut -d . -f 1-2)".$bumped_patch
          fi
        fi
        echo "::set-output name=version::${version}"

        build_base_image="$(cat build-base-image)"
        run_base_image="$(cat run-base-image)"

        published_build_base_image="$(echo "$build_base_image" | sed 's|paketotesting/build-rc@|paketobuildpacks/build@|')"
        published_run_base_image="$(echo "$run_base_image" | sed 's|paketotesting/run-rc@|paketobuildpacks/run@|')"

        build_cnb_image="$(cat build-cnb-image)"
        run_cnb_image="$(cat run-cnb-image)"

        echo "FROM ${build_cnb_image}" | \
          docker build -t "paketobuildpacks/build:tiny-cnb" \
          --label "io.buildpacks.stack.metadata={\"base-image\": \"${published_build_base_image}\"}" -

        echo "FROM ${run_cnb_image}" | \
          docker build -t "paketobuildpacks/run:tiny-cnb" \
          --label "io.buildpacks.stack.metadata={\"base-image\": \"${published_run_base_image}\"}" -

        sudo skopeo copy "docker://${build_base_image}" "docker://paketobuildpacks/build:tiny"
        sudo skopeo copy "docker://${build_base_image}" "docker://paketobuildpacks/build:${version}-tiny"

        docker push "paketobuildpacks/build:tiny-cnb"
        sudo skopeo copy "docker://paketobuildpacks/build:tiny-cnb" "docker://paketobuildpacks/build:${version}-tiny-cnb"

        sudo skopeo copy "docker://${run_base_image}" "docker://paketobuildpacks/run:tiny"
        sudo skopeo copy "docker://${run_base_image}" "docker://paketobuildpacks/run:${version}-tiny"

        docker push "paketobuildpacks/run:tiny-cnb"
        sudo skopeo copy "docker://paketobuildpacks/run:tiny-cnb" "docker://paketobuildpacks/run:${version}-tiny-cnb"
        sudo skopeo copy "docker://paketobuildpacks/run:tiny-cnb" "docker://gcr.io/paketo-buildpacks/run:tiny-cnb"

    - name: Publish Cloudfoundry Images
      run: |
        build_base_image="$(cat build-base-image)"
        run_base_image="$(cat run-base-image)"
        version="${{ steps.publish.outputs.version }}"

        docker login -u ${{ secrets.CLOUDFOUNDRY_DOCKERHUB_USERNAME }} --password-stdin \
          < <(echo "${{ secrets.CLOUDFOUNDRY_DOCKERHUB_PASSWORD }}")

        sudo skopeo copy "docker://${build_base_image}" "docker://cloudfoundry/build:tiny-cnb"
        sudo skopeo copy "docker://${build_base_image}" "docker://cloudfoundry/build:${version}-tiny-cnb"

        sudo skopeo copy "docker://paketobuildpacks/build:tiny-cnb" "docker://cloudfoundry/build:tiny-cnb"
        sudo skopeo copy "docker://paketobuildpacks/build:tiny-cnb" "docker://cloudfoundry/build:${version}-tiny-cnb"

        sudo skopeo copy "docker://${run_base_image}" "docker://cloudfoundry/run:tiny"
        sudo skopeo copy "docker://${run_base_image}" "docker://cloudfoundry/run:${version}-tiny"

        sudo skopeo copy "docker://paketobuildpacks/run:tiny-cnb" "docker://cloudfoundry/run:tiny-cnb"
        sudo skopeo copy "docker://paketobuildpacks/run:tiny-cnb" "docker://cloudfoundry/run:${version}-tiny-cnb"

    - name: Trigger Release
      uses: paketo-buildpacks/github-config/actions/dispatch@main
      with:
        repos: paketo-buildpacks/tiny-stack-release
        token: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}
        event: receipt-update
        payload: |
          {
            "tag": "${{ steps.publish.outputs.version }}"
          }
