name: Commit Receipts and Publish Stack Images
on:
  repository_dispatch:
    types: [ new-stack-rc ]
  workflow_dispatch:
    inputs:
      RUN_BASE_IMAGE:
        required: true
      RUN_CNB_IMAGE:
        required: true
      BUILD_BASE_IMAGE:
        required: true
      BUILD_CNB_IMAGE:
        required: true
      BUILD_BASE_IMAGE_TAG:
        required: false
      VERSION:
        required: false
        default: ''
      FORCE_PUBLISH:
        required: false
        default: 'false'
        description: 'Publish images even if there is no receipt diff'

env:
  RUN_BASE_IMAGE: ${{ github.event.client_payload.run_base_image }}
  RUN_CNB_IMAGE: ${{ github.event.client_payload.run_cnb_image }}
  BUILD_BASE_IMAGE: ${{ github.event.client_payload.build_base_image }}
  BUILD_CNB_IMAGE: ${{ github.event.client_payload.build_cnb_image }}
  BUILD_BASE_IMAGE_TAG: ${{ github.event.client_payload.build_base_image_tag }}

jobs:
  commit-receipts-and-publish-stack-images:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set Env Vars
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "RUN_BASE_IMAGE=${{ github.event.inputs.RUN_BASE_IMAGE }}" >> $GITHUB_ENV
          echo "RUN_CNB_IMAGE=${{ github.event.inputs.RUN_CNB_IMAGE }}" >> $GITHUB_ENV
          echo "BUILD_BASE_IMAGE=${{ github.event.inputs.BUILD_BASE_IMAGE }}" >> $GITHUB_ENV
          echo "BUILD_CNB_IMAGE=${{ github.event.inputs.BUILD_CNB_IMAGE }}" >> $GITHUB_ENV
          echo "BUILD_BASE_IMAGE_TAG=${{ github.event.inputs.BUILD_BASE_IMAGE_TAG }}" >> $GITHUB_ENV
          echo "VERSION=${{ github.event.inputs.VERSION }}" >> $GITHUB_ENV
          echo "FORCE_PUBLISH=${{ github.event.inputs.FORCE_PUBLISH }}" >> $GITHUB_ENV
        fi

    - uses: google-github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_key: ${{ secrets.GCR_PUSH_BOT_JSON_KEY }}

    - name: Configure docker gcloud auth
      run: gcloud auth configure-docker

    - name: Docker login
      run: |
        docker login -u ${{ secrets.PAKETO_BUILDPACKS_DOCKER_USER }} --password-stdin \
          < <(echo "${{ secrets.PAKETO_BUILDPACKS_DOCKER_PASS }}")

    - name: Generate build image receipt
      run: |
        docker pull "${BUILD_CNB_IMAGE}"
        docker run "${BUILD_CNB_IMAGE}" dpkg -l > build-receipt

    - name: Generate run image receipt
      run: |
        docker pull "${RUN_CNB_IMAGE}"
        container_id="$(docker create "${RUN_CNB_IMAGE}" sleep)"
        docker cp "${container_id}":/var/lib/dpkg/status.d /tmp/tiny-pkgs
        docker rm -v "${container_id}"

        cat > run-receipt << EOF
                          Name                              Version                            Architecture
        +++-===================================-===================================-===================================
        EOF

        for pkg in /tmp/tiny-pkgs/*; do
          name="$(cat "${pkg}" | grep Package: | cut -d ' ' -f2)"
          version="$(cat "${pkg}" | grep Version: | cut -d ' ' -f2)"
          arch="$(cat "${pkg}" | grep Architecture: | cut -d ' ' -f2)"

          printf "ii  %-35s %-35s %-35s\n" ${name} ${version} ${arch} >> run-receipt
        done

    - name: Commit receipts
      id: commit
      run: |
        if ! git diff --quiet build-receipt run-receipt; then
          git config user.name "Core Deps"
          git config user.email coredependencies@vmware.com
          git add build-receipt run-receipt
          git commit -m 'Update receipts'
          git push

          echo ::set-output name=PUBLISH::true
        elif [[ "${FORCE_PUBLISH}" == "true" ]]; then
          echo ::set-output name=PUBLISH::true
        fi

    - name: Get package diff
      id: get-package-diff
      uses: paketo-buildpacks/stacks/actions/get-package-diff@main
      if: steps.commit.outputs.PUBLISH
      with:
        ref: ${{ github.sha }}

    - name: Check for removed packages
      if: steps.commit.outputs.PUBLISH
      run: |
        removed=false
        if [[ -n "${{ steps.get-package-diff.outputs.removed-build-packages }}" ]]; then
          echo "Packages removed from build image: ${{ steps.get-package-diff.outputs.removed-build-packages }}"
          removed=true
        fi
        if [[ -n "${{ steps.get-package-diff.outputs.removed-run-packages }}" ]]; then
          echo "Packages removed from run image: ${{ steps.get-package-diff.outputs.removed-run-packages }}"
          removed=true
        fi
        if [[ "${removed}" == "true" ]]; then
          exit 1
        fi

    - name: Publish Images
      id: publish
      if: steps.commit.outputs.PUBLISH
      run: |
        version="${VERSION}"
        if [[ "${version}" == '' ]]; then
          last_version="$(curl -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/$GITHUB_REPOSITORY/tags | jq -r '.[0].name // "0.0.0"')"

          if [[ -n "${{ steps.get-package-diff.outputs.added-build-packages }}" ]] || [[ -n "${{ steps.get-package-diff.outputs.added-run-packages }}" ]]; then
            bumped_minor="$(($(echo $last_version | cut -d . -f 2) + 1))"
            version="$( echo $last_version | cut -d . -f 1)".$bumped_minor.0
          else
            bumped_patch="$(($(echo $last_version | cut -d . -f 3) + 1))"
            version="$( echo $last_version | cut -d . -f 1-2)".$bumped_patch
          fi
        fi
        echo "::set-output name=version::${version}"

        published_build_base_image="$(echo "${BUILD_BASE_IMAGE}" | sed 's/build-rc@/build@/')"
        published_run_base_image="$(echo "${RUN_BASE_IMAGE}" | sed 's/run-rc@/run@/')"

        echo "FROM ${BUILD_CNB_IMAGE}" | \
          docker build -t "paketobuildpacks/build:tiny-cnb" \
          --label "io.buildpacks.stack.metadata={\"base-image\": \"${published_build_base_image}\"}" -

        echo "FROM ${RUN_CNB_IMAGE}" | \
          docker build -t "paketobuildpacks/run:tiny-cnb" \
          --label "io.buildpacks.stack.metadata={\"base-image\": \"${published_run_base_image}\"}" -

        sudo skopeo copy "docker://${BUILD_CNB_IMAGE}" "docker://paketobuildpacks/build:tiny-cnb"
        sudo skopeo copy "docker://${BUILD_CNB_IMAGE}" "docker://paketobuildpacks/build:$version-tiny-cnb"

        docker push "paketobuildpacks/build:tiny-cnb"
        sudo skopeo copy "docker://paketobuildpacks/build:tiny-cnb" "docker://paketobuildpacks/build:$version-tiny-cnb"
        sudo skopeo copy "docker://paketobuildpacks/build:tiny-cnb" "docker://gcr.io/paketo-buildpacks/build:tiny-cnb"

        sudo skopeo copy "docker://${RUN_BASE_IMAGE}" "docker://paketobuildpacks/run:tiny"
        sudo skopeo copy "docker://${RUN_BASE_IMAGE}" "docker://paketobuildpacks/run:$version-tiny"

        docker push "paketobuildpacks/run:tiny-cnb"
        sudo skopeo copy "docker://paketobuildpacks/run:tiny-cnb" "docker://paketobuildpacks/run:$version-tiny-cnb"
        sudo skopeo copy "docker://paketobuildpacks/run:tiny-cnb" "docker://gcr.io/paketo-buildpacks/run:tiny-cnb"

    - name: Publish Cloudfoundry Images
      if: steps.commit.outputs.PUBLISH
      run: |
        version="${{ steps.publish.outputs.version }}"

        docker login -u ${{ secrets.CLOUDFOUNDRY_DOCKERHUB_USERNAME }} --password-stdin \
          < <(echo "${{ secrets.CLOUDFOUNDRY_DOCKERHUB_PASSWORD }}")

        sudo skopeo copy "docker://${BUILD_CNB_IMAGE}" "docker://cloudfoundry/build:tiny-cnb"
        sudo skopeo copy "docker://${BUILD_CNB_IMAGE}" "docker://cloudfoundry/build:$version-tiny-cnb"

        sudo skopeo copy "docker://${RUN_BASE_IMAGE}" "docker://cloudfoundry/run:tiny"
        sudo skopeo copy "docker://${RUN_BASE_IMAGE}" "docker://cloudfoundry/run:$version-tiny"

        sudo skopeo copy "docker://paketobuildpacks/run:tiny-cnb" "docker://cloudfoundry/run:tiny-cnb"
        sudo skopeo copy "docker://paketobuildpacks/run:tiny-cnb" "docker://cloudfoundry/run:$version-tiny-cnb"

    - name: Trigger Release
      if: steps.commit.outputs.PUBLISH
      uses: paketo-buildpacks/github-config/actions/dispatch@main
      with:
        repos: paketo-buildpacks/tiny-stack-release
        token: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}
        event: receipt-update
        payload: |
          {
            "tag": "${{ steps.publish.outputs.version }}",
            "build_base_image_tag": "${{ env.BUILD_BASE_IMAGE_TAG }}"
          }
