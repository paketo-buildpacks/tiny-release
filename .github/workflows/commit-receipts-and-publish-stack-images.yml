name: Commit Receipts and Publish Stack Images
on:
  repository_dispatch:
    types: [ new-stack-rc ]
  workflow_dispatch:
    inputs:
      RUN_BASE_IMAGE:
        required: true
      RUN_CNB_IMAGE:
        required: true
      BUILD_BASE_IMAGE:
        required: true
      BUILD_CNB_IMAGE:
        required: true
      BUILD_BASE_IMAGE_TAG:
        required: false

env:
  RUN_BASE_IMAGE: ${{ github.event.client_payload.run_base_image }}
  RUN_CNB_IMAGE: ${{ github.event.client_payload.run_cnb_image }}
  BUILD_BASE_IMAGE: ${{ github.event.client_payload.build_base_image }}
  BUILD_CNB_IMAGE: ${{ github.event.client_payload.build_cnb_image }}
  BUILD_BASE_IMAGE_TAG: ${{ github.event.client_payload.build_base_image_tag }}

jobs:
  commit-receipts-and-publish-stack-images:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set Env Vars
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo ::set-env name=RUN_BASE_IMAGE::${{ github.event.inputs.RUN_BASE_IMAGE }}
          echo ::set-env name=RUN_CNB_IMAGE::${{ github.event.inputs.RUN_CNB_IMAGE }}
          echo ::set-env name=BUILD_BASE_IMAGE::${{ github.event.inputs.BUILD_BASE_IMAGE }}
          echo ::set-env name=BUILD_CNB_IMAGE::${{ github.event.inputs.BUILD_CNB_IMAGE }}
          echo ::set-env name=BUILD_BASE_IMAGE_TAG::${{ github.event.inputs.BUILD_BASE_IMAGE_TAG }}
        fi

    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: paketo-buildpacks-gcr-push@cf-buildpacks-releng.iam.gserviceaccount.com
        service_account_key: ${{ secrets.CORE_DEPS_GCR_PUSH_BOT_KEY }}

    - name: Configure docker gcloud auth
      run: gcloud auth configure-docker

    - name: Docker login
      run: |
        docker login -u ${{ secrets.CORE_DEPS_DOCKER_USER }} --password-stdin \
          < <(echo "${{ secrets.CORE_DEPS_DOCKER_PASS }}")

    - name: Generate build image receipt
      run: |
        docker pull "${BUILD_CNB_IMAGE}"
        docker run "${BUILD_CNB_IMAGE}" dpkg -l > build-receipt

    - name: Generate run image receipt
      run: |
        docker pull "${RUN_CNB_IMAGE}"
        container_id="$(docker create "${RUN_CNB_IMAGE}" sleep)"
        docker cp "${container_id}":/var/lib/dpkg/status.d /tmp/tiny-pkgs
        docker rm -v "${container_id}"

        cat > run-receipt << EOF
                          Name                              Version                            Architecture
        +++-===================================-===================================-===================================
        EOF

        for pkg in /tmp/tiny-pkgs/*; do
          name="$(cat "${pkg}" | grep Package: | cut -d ' ' -f2)"
          version="$(cat "${pkg}" | grep Version: | cut -d ' ' -f2)"
          arch="$(cat "${pkg}" | grep Architecture: | cut -d ' ' -f2)"

          printf "ii  %-35s %-35s %-35s\n" ${name} ${version} ${arch} >> run-receipt
        done

    - name: Commit receipts
      id: commit
      run: |
        if ! git diff --quiet build-receipt run-receipt; then
          git config user.name "Core Deps"
          git config user.email coredependencies@vmware.com
          git add build-receipt run-receipt
          git commit -m 'Update receipts'
          git push

          echo ::set-output name=PUBLISH::true
        fi

    - name: Publish Images
      id: publish
      if: steps.commit.outputs.PUBLISH
      run: |
        version="$(curl -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/$GITHUB_REPOSITORY/tags | jq -r '.[0].name // "0.0.0"')"
        bumped_patch="$(($(echo $version | cut -d . -f 3) + 1))"
        bumped_version="$( echo $version | cut -d . -f 1-2)".$bumped_patch
        echo "::set-output name=version::${bumped_version}"

        sudo skopeo copy "docker://${RUN_CNB_IMAGE}" "docker://gcr.io/cf-buildpacks-releng/run-test:tiny-cnb"
        sudo skopeo copy "docker://${RUN_CNB_IMAGE}" "docker://gcr.io/cf-buildpacks-releng/run-test:$bumped_version-tiny-cnb"

        sudo skopeo copy "docker://${RUN_BASE_IMAGE}" "docker://index.docker.io/coredeps/run-rc:tiny"
        sudo skopeo copy "docker://${RUN_BASE_IMAGE}" "docker://index.docker.io/coredeps/run-rc:$bumped_version-tiny"

        sudo skopeo copy "docker://${RUN_CNB_IMAGE}" "docker://index.docker.io/coredeps/run-rc:tiny-cnb"
        sudo skopeo copy "docker://${RUN_CNB_IMAGE}" "docker://index.docker.io/coredeps/run-rc:$bumped_version-tiny-cnb"

        sudo skopeo copy "docker://${BUILD_CNB_IMAGE}" "docker://index.docker.io/coredeps/build-rc:tiny-cnb"
        sudo skopeo copy "docker://${BUILD_CNB_IMAGE}" "docker://index.docker.io/coredeps/build-rc:$bumped_version-tiny-cnb"

    - name: Trigger Release
      if: steps.commit.outputs.PUBLISH
      uses: paketo-buildpacks/github-config/actions/dispatch@main
      with:
        repos: paketo-buildpacks/tiny-release
        token: ${{ secrets.CORE_DEPS_CI_BOT_GITHUB_TOKEN }}
        event: receipt-update
        payload: |
          {
            "tag": "${{ steps.publish.outputs.version }}",
            "build_base_image_tag": "${{ env.BUILD_BASE_IMAGE_TAG }}"
          }
